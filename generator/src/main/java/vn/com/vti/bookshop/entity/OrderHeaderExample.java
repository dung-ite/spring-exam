package vn.com.vti.bookshop.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class OrderHeaderExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.order_header
     *
     * @mbg.generated Thu Nov 02 13:54:42 JST 2023
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.order_header
     *
     * @mbg.generated Thu Nov 02 13:54:42 JST 2023
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.order_header
     *
     * @mbg.generated Thu Nov 02 13:54:42 JST 2023
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.order_header
     *
     * @mbg.generated Thu Nov 02 13:54:42 JST 2023
     */
    public OrderHeaderExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.order_header
     *
     * @mbg.generated Thu Nov 02 13:54:42 JST 2023
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.order_header
     *
     * @mbg.generated Thu Nov 02 13:54:42 JST 2023
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.order_header
     *
     * @mbg.generated Thu Nov 02 13:54:42 JST 2023
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.order_header
     *
     * @mbg.generated Thu Nov 02 13:54:42 JST 2023
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.order_header
     *
     * @mbg.generated Thu Nov 02 13:54:42 JST 2023
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.order_header
     *
     * @mbg.generated Thu Nov 02 13:54:42 JST 2023
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.order_header
     *
     * @mbg.generated Thu Nov 02 13:54:42 JST 2023
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.order_header
     *
     * @mbg.generated Thu Nov 02 13:54:42 JST 2023
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.order_header
     *
     * @mbg.generated Thu Nov 02 13:54:42 JST 2023
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.order_header
     *
     * @mbg.generated Thu Nov 02 13:54:42 JST 2023
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.order_header
     *
     * @mbg.generated Thu Nov 02 13:54:42 JST 2023
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andOrderDatetimeIsNull() {
            addCriterion("order_datetime is null");
            return (Criteria) this;
        }

        public Criteria andOrderDatetimeIsNotNull() {
            addCriterion("order_datetime is not null");
            return (Criteria) this;
        }

        public Criteria andOrderDatetimeEqualTo(Date value) {
            addCriterionForJDBCDate("order_datetime =", value, "orderDatetime");
            return (Criteria) this;
        }

        public Criteria andOrderDatetimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("order_datetime <>", value, "orderDatetime");
            return (Criteria) this;
        }

        public Criteria andOrderDatetimeGreaterThan(Date value) {
            addCriterionForJDBCDate("order_datetime >", value, "orderDatetime");
            return (Criteria) this;
        }

        public Criteria andOrderDatetimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("order_datetime >=", value, "orderDatetime");
            return (Criteria) this;
        }

        public Criteria andOrderDatetimeLessThan(Date value) {
            addCriterionForJDBCDate("order_datetime <", value, "orderDatetime");
            return (Criteria) this;
        }

        public Criteria andOrderDatetimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("order_datetime <=", value, "orderDatetime");
            return (Criteria) this;
        }

        public Criteria andOrderDatetimeIn(List<Date> values) {
            addCriterionForJDBCDate("order_datetime in", values, "orderDatetime");
            return (Criteria) this;
        }

        public Criteria andOrderDatetimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("order_datetime not in", values, "orderDatetime");
            return (Criteria) this;
        }

        public Criteria andOrderDatetimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("order_datetime between", value1, value2, "orderDatetime");
            return (Criteria) this;
        }

        public Criteria andOrderDatetimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("order_datetime not between", value1, value2, "orderDatetime");
            return (Criteria) this;
        }

        public Criteria andCustomerIdIsNull() {
            addCriterion("customer_id is null");
            return (Criteria) this;
        }

        public Criteria andCustomerIdIsNotNull() {
            addCriterion("customer_id is not null");
            return (Criteria) this;
        }

        public Criteria andCustomerIdEqualTo(Integer value) {
            addCriterion("customer_id =", value, "customerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdNotEqualTo(Integer value) {
            addCriterion("customer_id <>", value, "customerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdGreaterThan(Integer value) {
            addCriterion("customer_id >", value, "customerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("customer_id >=", value, "customerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdLessThan(Integer value) {
            addCriterion("customer_id <", value, "customerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdLessThanOrEqualTo(Integer value) {
            addCriterion("customer_id <=", value, "customerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdIn(List<Integer> values) {
            addCriterion("customer_id in", values, "customerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdNotIn(List<Integer> values) {
            addCriterion("customer_id not in", values, "customerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdBetween(Integer value1, Integer value2) {
            addCriterion("customer_id between", value1, value2, "customerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdNotBetween(Integer value1, Integer value2) {
            addCriterion("customer_id not between", value1, value2, "customerId");
            return (Criteria) this;
        }

        public Criteria andPaymentAmountIsNull() {
            addCriterion("payment_amount is null");
            return (Criteria) this;
        }

        public Criteria andPaymentAmountIsNotNull() {
            addCriterion("payment_amount is not null");
            return (Criteria) this;
        }

        public Criteria andPaymentAmountEqualTo(Integer value) {
            addCriterion("payment_amount =", value, "paymentAmount");
            return (Criteria) this;
        }

        public Criteria andPaymentAmountNotEqualTo(Integer value) {
            addCriterion("payment_amount <>", value, "paymentAmount");
            return (Criteria) this;
        }

        public Criteria andPaymentAmountGreaterThan(Integer value) {
            addCriterion("payment_amount >", value, "paymentAmount");
            return (Criteria) this;
        }

        public Criteria andPaymentAmountGreaterThanOrEqualTo(Integer value) {
            addCriterion("payment_amount >=", value, "paymentAmount");
            return (Criteria) this;
        }

        public Criteria andPaymentAmountLessThan(Integer value) {
            addCriterion("payment_amount <", value, "paymentAmount");
            return (Criteria) this;
        }

        public Criteria andPaymentAmountLessThanOrEqualTo(Integer value) {
            addCriterion("payment_amount <=", value, "paymentAmount");
            return (Criteria) this;
        }

        public Criteria andPaymentAmountIn(List<Integer> values) {
            addCriterion("payment_amount in", values, "paymentAmount");
            return (Criteria) this;
        }

        public Criteria andPaymentAmountNotIn(List<Integer> values) {
            addCriterion("payment_amount not in", values, "paymentAmount");
            return (Criteria) this;
        }

        public Criteria andPaymentAmountBetween(Integer value1, Integer value2) {
            addCriterion("payment_amount between", value1, value2, "paymentAmount");
            return (Criteria) this;
        }

        public Criteria andPaymentAmountNotBetween(Integer value1, Integer value2) {
            addCriterion("payment_amount not between", value1, value2, "paymentAmount");
            return (Criteria) this;
        }

        public Criteria andPaymentTypeIdIsNull() {
            addCriterion("payment_type_id is null");
            return (Criteria) this;
        }

        public Criteria andPaymentTypeIdIsNotNull() {
            addCriterion("payment_type_id is not null");
            return (Criteria) this;
        }

        public Criteria andPaymentTypeIdEqualTo(Integer value) {
            addCriterion("payment_type_id =", value, "paymentTypeId");
            return (Criteria) this;
        }

        public Criteria andPaymentTypeIdNotEqualTo(Integer value) {
            addCriterion("payment_type_id <>", value, "paymentTypeId");
            return (Criteria) this;
        }

        public Criteria andPaymentTypeIdGreaterThan(Integer value) {
            addCriterion("payment_type_id >", value, "paymentTypeId");
            return (Criteria) this;
        }

        public Criteria andPaymentTypeIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("payment_type_id >=", value, "paymentTypeId");
            return (Criteria) this;
        }

        public Criteria andPaymentTypeIdLessThan(Integer value) {
            addCriterion("payment_type_id <", value, "paymentTypeId");
            return (Criteria) this;
        }

        public Criteria andPaymentTypeIdLessThanOrEqualTo(Integer value) {
            addCriterion("payment_type_id <=", value, "paymentTypeId");
            return (Criteria) this;
        }

        public Criteria andPaymentTypeIdIn(List<Integer> values) {
            addCriterion("payment_type_id in", values, "paymentTypeId");
            return (Criteria) this;
        }

        public Criteria andPaymentTypeIdNotIn(List<Integer> values) {
            addCriterion("payment_type_id not in", values, "paymentTypeId");
            return (Criteria) this;
        }

        public Criteria andPaymentTypeIdBetween(Integer value1, Integer value2) {
            addCriterion("payment_type_id between", value1, value2, "paymentTypeId");
            return (Criteria) this;
        }

        public Criteria andPaymentTypeIdNotBetween(Integer value1, Integer value2) {
            addCriterion("payment_type_id not between", value1, value2, "paymentTypeId");
            return (Criteria) this;
        }

        public Criteria andShippingMethodIdIsNull() {
            addCriterion("shipping_method_id is null");
            return (Criteria) this;
        }

        public Criteria andShippingMethodIdIsNotNull() {
            addCriterion("shipping_method_id is not null");
            return (Criteria) this;
        }

        public Criteria andShippingMethodIdEqualTo(Integer value) {
            addCriterion("shipping_method_id =", value, "shippingMethodId");
            return (Criteria) this;
        }

        public Criteria andShippingMethodIdNotEqualTo(Integer value) {
            addCriterion("shipping_method_id <>", value, "shippingMethodId");
            return (Criteria) this;
        }

        public Criteria andShippingMethodIdGreaterThan(Integer value) {
            addCriterion("shipping_method_id >", value, "shippingMethodId");
            return (Criteria) this;
        }

        public Criteria andShippingMethodIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("shipping_method_id >=", value, "shippingMethodId");
            return (Criteria) this;
        }

        public Criteria andShippingMethodIdLessThan(Integer value) {
            addCriterion("shipping_method_id <", value, "shippingMethodId");
            return (Criteria) this;
        }

        public Criteria andShippingMethodIdLessThanOrEqualTo(Integer value) {
            addCriterion("shipping_method_id <=", value, "shippingMethodId");
            return (Criteria) this;
        }

        public Criteria andShippingMethodIdIn(List<Integer> values) {
            addCriterion("shipping_method_id in", values, "shippingMethodId");
            return (Criteria) this;
        }

        public Criteria andShippingMethodIdNotIn(List<Integer> values) {
            addCriterion("shipping_method_id not in", values, "shippingMethodId");
            return (Criteria) this;
        }

        public Criteria andShippingMethodIdBetween(Integer value1, Integer value2) {
            addCriterion("shipping_method_id between", value1, value2, "shippingMethodId");
            return (Criteria) this;
        }

        public Criteria andShippingMethodIdNotBetween(Integer value1, Integer value2) {
            addCriterion("shipping_method_id not between", value1, value2, "shippingMethodId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.order_header
     *
     * @mbg.generated do_not_delete_during_merge Thu Nov 02 13:54:42 JST 2023
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.order_header
     *
     * @mbg.generated Thu Nov 02 13:54:42 JST 2023
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}